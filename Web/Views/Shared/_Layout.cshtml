@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> signInManager
@inject UserManager<User> userManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - CSSITE</title>
    @* <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/> *@
    <script src="https://kit.fontawesome.com/4e3e087dd4.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/form.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/header.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Web.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav>
            <a class="logo" asp-controller="Home" asp-action="Index"> CV-Site </a>
            <a class="message" asp-controller="Message" asp-action="Index">
                <p> Messages</p>
                <i class="fa-regular fa-envelope"></i>
                <div class="inbox">
                    @{
                        @if (signInManager.IsSignedIn(User))
                        {                            
                            User? user = await userManager.GetUserAsync(User);
                            int? unreadMessages = user?.ReceivedMessages.Where(rm => !rm.Read).Count();
                            <p>@unreadMessages</p>
                        }
                    }
                </div>
            </a>
            <a asp-controller="Project" asp-action="Index"> Projects </a>
            @if (!signInManager.IsSignedIn(User))
            {
                <a asp-controller="Auth" asp-action="Login" class="login"> Log in </a>
            }
            else
            {
                <form asp-controller="Auth" asp-action="Logout">
                    <button type="submit">Logout</button>
                </form>

                User? user = await userManager.GetUserAsync(User);

                <div class="profile">
                    <a asp-controller="Profile" asp-action="Index" asp-route-id="@user?.Id"> Profile </a>
                    @{
                        string directory = "~/avatars/";
                        string defaultAvatar = "default.png";

                        string avatar = user?.AvatarUri != defaultAvatar
                            ? Url.Content(directory + user?.AvatarUri)
                            : Url.Content(directory + defaultAvatar);
                    }
                    <img src="@avatar" class="avatar"/>
                </div>
            }
    </nav>
</header>
<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/js/search.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>